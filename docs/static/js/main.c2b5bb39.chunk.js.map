{"version":3,"sources":["reportWebVitals.ts","components/DateInput.tsx","screens/Calendar.tsx","hooks/useCalendar.tsx","components/Profile.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","DateInput","title","date","setDate","style","margin","className","htmlFor","format","value","onChange","CalendarApp","useState","column","setColumn","Date","start","setStart","moment","add","toDate","end","setEnd","endDaysOfMounth","parseInt","startDaysOfMounth","diffMounth","diff","range","startDate","endDate","key","months","setStartDate","setEndDate","useCalendar","columnsSize","form","display","options","index","push","target","columsnInput","calendarView","width","ranges","showDateDisplay","showPreview","direction","Profile","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sKAceA,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gDCFDQ,EAAU,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,MAAMC,EAAmC,EAAnCA,KAAKC,EAA8B,EAA9BA,QAChC,OAAO,sBAAKC,MAAO,CAACC,OAAO,QAApB,UACP,uBAAOC,UAAU,YAAYC,QAAQ,QAArC,SAA8CN,IAC1C,qBAAKK,UAAU,mBAAf,SACI,cAAC,IAAD,CAAgBE,OAAO,UACPC,MAAOP,EACPQ,SAAUP,EACVG,UAAU,uB,iBCPzBK,EAAc,WAAO,IAAD,EACDC,mBAAS,KADR,mBACtBC,EADsB,KACdC,EADc,OCJN,WAAO,IAAD,EACHF,mBAAS,IAAIG,MADV,mBACtBC,EADsB,KACfC,EADe,OAEPL,mBAASM,MAASC,IAAI,EAAE,SAASC,UAF1B,mBAEtBC,EAFsB,KAEjBC,EAFiB,KAIvBC,EAAgBC,SAASN,IAAOG,GAAKb,OAAO,MAC5CiB,EAAkBD,SAASN,IAAOF,GAAOR,OAAO,MAChDkB,EAAYR,IAAOG,GAAKM,KAAKX,EAAM,UAoBzC,MAAO,CAACA,QAAOK,MAAKO,MAfN,CACVC,UAAUb,EACVc,QAAQT,EACRU,IAAK,aAYkBC,OAnBXT,EAAgBE,EAC1BC,EAAW,EACXA,EAAW,EAiBkBO,aATf,SAAC/B,GACjBe,EAASf,GACRA,EAAKmB,GAAQC,EAAOpB,IAOwBgC,WAL/B,SAAChC,GACfoB,EAAOpB,GACNA,EAAKc,GAAUC,EAASf,KDjBgCiC,GAAtDnB,EAFsB,EAEtBA,MAAOK,EAFe,EAEfA,IAAKO,EAFU,EAEVA,MAAOI,EAFG,EAEHA,OAAQC,EAFL,EAEKA,aAAcC,EAFnB,EAEmBA,WAC1CE,EAAY,IAAIZ,SAASX,GAiBzBwB,EAAK,uBAAMjC,MAAO,CAACkC,QAAQ,QAAtB,UACH,cAAC,EAAD,CAAWrC,MAAM,QAAQC,KAAMc,EAAOb,QAAS8B,IAC/C,cAAC,EAAD,CAAWhC,MAAM,MAAMC,KAAMmB,EAAKlB,QAAS+B,IAjBhC,WAEf,IADA,IAAIK,EAAQ,GACHC,EAAQ,EAAGA,GAAS,GAAIA,IAC7BD,EAAQE,KACJ,wBAAQhC,MAAK,UAAK+B,GAAlB,SAAwCA,GAARA,IAExC,OAAO,sBAAKpC,MAAO,CAACC,OAAO,QAApB,UACH,uBAAOC,UAAU,YAAYC,QAAQ,QAArC,oBACA,wBAAQD,UAAU,cACdG,MAAOI,EACPH,SAAU,gBAAEgC,EAAF,EAAEA,OAAF,OAAY5B,EAAU4B,EAAOjC,QAF3C,SAGK8B,OAOJI,MAEHC,EAAa,qBAAKxC,MAAO,CAACyC,MAAM,GAAD,OAAIT,EAAJ,OAAlB,SACX,cAAC,kBAAD,CACIU,OAAQ,CAAClB,GACTlB,SAAU,aACVqC,iBAAiB,EACjBC,aAAa,EACbhB,OAAQA,EACRiB,UAAU,iBAItB,OACI,sBAAK3C,UAAU,YAAf,UACI,uBACA,0CACA,uBACC+B,EACAO,MEjDAM,G,cAAU,WACnB,OACI,sBAAK5C,UAAU,YAAf,UACI,8DACA,uBACA,0CAAY,mBAAG6C,KAAK,8CAAR,yDAAZ,YCGZC,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEFC,SAASC,eAAe,SAM1BjE,K","file":"static/js/main.c2b5bb39.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import DateTimePicker from 'react-datetime-picker';\r\ntype InputDateInterface={\r\n    title:String;\r\n    date:Date;\r\n    setDate:React.Dispatch<React.SetStateAction<Date>>;\r\n}\r\n\r\nexport const DateInput=({title,date,setDate}:InputDateInterface)=>{\r\n    return <div style={{margin:'10px'}}>\r\n    <label className='basic-url' htmlFor='start'>{title}</label>\r\n        <div className='input-group ml-5'>\r\n            <DateTimePicker format='dd-MM-y'\r\n                            value={date}\r\n                            onChange={setDate}\r\n                            className='form-control'></DateTimePicker>\r\n    </div>\r\n    </div>\r\n};","import { DateRangePicker } from 'react-date-range';\r\nimport './calendar.css';\r\nimport { useState } from 'react';\r\nimport { DateInput } from '../components/DateInput';\r\nimport { useCalendar } from '../hooks/useCalendar';\r\n\r\n\r\nexport const CalendarApp = () => {\r\n    const [column, setColumn] = useState('3');\r\n    const {start, end, range, months, setStartDate, setEndDate} =useCalendar();\r\n    const columnsSize=333*parseInt(column);\r\n\r\n    const columsnInput=()=>{        \r\n        let options=[];\r\n        for (let index = 1; index <= 10; index++) {\r\n            options.push(\r\n                <option value={`${index}`} key={index}>{index}</option>)\r\n        }\r\n        return <div style={{margin:'10px'}}>\r\n            <label className='basic-url' htmlFor='start'>Colums</label>\r\n            <select className=\"form-select\"\r\n                value={column}\r\n                onChange={({target})=>setColumn(target.value)}>\r\n                {options}\r\n            </select>\r\n        </div>};\r\n\r\n    const form=<form style={{display:'flex'}}>\r\n            <DateInput title='Start' date={start} setDate={setStartDate}/>\r\n            <DateInput title='End' date={end} setDate={setEndDate}/>\r\n            {columsnInput()}\r\n        </form>\r\n    const calendarView=<div style={{width:`${columnsSize}px`}}>\r\n            <DateRangePicker\r\n                ranges={[range]}\r\n                onChange={()=>{}}\r\n                showDateDisplay={false}\r\n                showPreview={false}\r\n                months={months}\r\n                direction='horizontal'\r\n            />\r\n        </div>;\r\n\r\n    return (\r\n        <div className='container'>\r\n            <br/>\r\n            <h1>Calendar</h1>\r\n            <hr/>\r\n            {form}\r\n            {calendarView}\r\n        </div>\r\n    )\r\n}\r\n","import moment from \"moment\";\r\nimport { useState } from \"react\";\r\n\r\nexport const useCalendar = () => {\r\n    const [start, setStart] = useState(new Date());\r\n    const [end, setEnd] = useState(moment().add(2,'month').toDate());\r\n    \r\n    const endDaysOfMounth=parseInt(moment(end).format('D'));\r\n    const startDaysOfMounth=parseInt(moment(start).format('D'));\r\n    const diffMounth=(moment(end).diff(start,'months'));\r\n    const months = (endDaysOfMounth<startDaysOfMounth)\r\n        ?(diffMounth+2)\r\n        :(diffMounth+1);\r\n\r\n    const range = {\r\n        startDate:start,\r\n        endDate:end,\r\n        key: 'selection',\r\n      }\r\n\r\n    const setStartDate= (date)=>{\r\n        setStart(date);\r\n        (date>end) && setEnd(date);\r\n    }\r\n    const setEndDate= (date)=>{\r\n        setEnd(date);\r\n        (date<start) && setStart(date);\r\n    }\r\n    \r\n    return {start, end, range, months, setStartDate, setEndDate}\r\n}\r\n","export const Profile = () => {\r\n    return (\r\n        <div className='container'>\r\n            <h2>By Andr√©s Cardona Alvarez</h2> \r\n            <hr/>\r\n            <h3>GitHub: <a href=\"https://github.com/webacamate/calendar-exam\">https://github.com/webacamate/calendar-exam</a> </h3>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { CalendarApp } from './screens/Calendar';\nimport 'react-date-range/dist/styles.css'; // main style file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\nimport { Profile } from './components/Profile';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CalendarApp />\n    <Profile/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}